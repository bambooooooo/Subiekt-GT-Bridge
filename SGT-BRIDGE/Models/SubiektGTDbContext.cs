// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace SGT_BRIDGE.Models;

public partial class SubiektGTDbContext : DbContext
{
    public SubiektGTDbContext()
    {
    }

    public SubiektGTDbContext(DbContextOptions<SubiektGTDbContext> options)
        : base(options)
    {
    }

    public virtual DbSet<LEO_SystemRabatowy_Zbiorcze> LEO_SystemRabatowy_Zbiorcze { get; set; }

    public virtual DbSet<LEO_SystemRabatowy_Zestawy> LEO_SystemRabatowy_Zestawy { get; set; }

    public virtual DbSet<LEO_SystemRabatowy_ZestawyGrupyKh> LEO_SystemRabatowy_ZestawyGrupyKh { get; set; }

    public virtual DbSet<LEO_SystemRabatowy_ZestawyKontrahenci> LEO_SystemRabatowy_ZestawyKontrahenci { get; set; }

    public virtual DbSet<LEO_SystemRabatowy_ZestawyMagazyny> LEO_SystemRabatowy_ZestawyMagazyny { get; set; }

    public virtual DbSet<LEO_SystemRabatowy_ZestawyPowiazania> LEO_SystemRabatowy_ZestawyPowiazania { get; set; }

    public virtual DbSet<dok__Dokument> dok__Dokument { get; set; }

    public virtual DbSet<sl_Magazyn> sl_Magazyn { get; set; }

    public virtual DbSet<sl_Panstwo> sl_Panstwo { get; set; }

    public virtual DbSet<vwPolaWlasne_Dokument> vwPolaWlasne_Dokument { get; set; }

    public virtual DbSet<vwPolaWlasne_Kontrahent> vwPolaWlasne_Kontrahent { get; set; }

    protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
#warning To protect potentially sensitive information in your connection string, you should move it out of source code. You can avoid scaffolding the connection string by using the Name= syntax to read it from configuration - see https://go.microsoft.com/fwlink/?linkid=2131148. For more guidance on storing connection strings, see https://go.microsoft.com/fwlink/?LinkId=723263.
        => optionsBuilder.UseSqlServer("Data Source=(local)\\PROD;Initial Catalog=MEGSTYL;Integrated Security=True;Encrypt=True;Trust Server Certificate=True");

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<LEO_SystemRabatowy_Zbiorcze>(entity =>
        {
            entity.HasNoKey();

            entity.HasIndex(e => new { e.zb_Typ, e.zb_ObiektId }, "IDX_ZZ").IsUnique();

            entity.Property(e => e.zb_Wartosc).HasColumnType("decimal(10, 2)");
        });

        modelBuilder.Entity<LEO_SystemRabatowy_Zestawy>(entity =>
        {
            entity.HasKey(e => e.zr_Id).HasName("PK__LEO_Syst__FB4BF42D1D0EF822");

            entity.HasIndex(e => e.zr_Symbol, "SymbolUnique").IsUnique();

            entity.Property(e => e.zr_DataDo).HasColumnType("datetime");
            entity.Property(e => e.zr_DataOd).HasColumnType("datetime");
            entity.Property(e => e.zr_DodatkowyRabatUpustKwotowyZestaw).HasDefaultValue(true);
            entity.Property(e => e.zr_DodatkowyRabatUpustProcentowyZestaw).HasDefaultValue(true);
            entity.Property(e => e.zr_Nazwa)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.zr_Notatki).HasColumnType("text");
            entity.Property(e => e.zr_OstatniaModyfikacja).HasColumnType("datetime");
            entity.Property(e => e.zr_Symbol)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasDefaultValue("brak");
        });

        modelBuilder.Entity<LEO_SystemRabatowy_ZestawyGrupyKh>(entity =>
        {
            entity.HasNoKey();

            entity.HasIndex(e => new { e.zrg_ZestawId, e.zrg_GrupaId }, "IDX_ZGK")
                .IsUnique()
                .IsClustered();
        });

        modelBuilder.Entity<LEO_SystemRabatowy_ZestawyKontrahenci>(entity =>
        {
            entity.HasKey(x => new { x.zrk_ZestawId, x.zrk_KontrahentId });

            entity.HasIndex(e => new { e.zrk_ZestawId, e.zrk_KontrahentId }, "IDX_ZK")
                .IsUnique()
                .IsClustered();
        });

        modelBuilder.Entity<LEO_SystemRabatowy_ZestawyMagazyny>(entity =>
        {
            entity.HasKey(x => new { x.zrm_MagazynId, x.zrm_ZestawId });

            entity.HasIndex(e => new { e.zrm_ZestawId, e.zrm_MagazynId }, "IDX_ZM")
                .IsUnique()
                .IsClustered();
        });

        modelBuilder.Entity<LEO_SystemRabatowy_ZestawyPowiazania>(entity =>
        {
            entity.HasKey(e => e.zrp_Id).HasName("PK__LEO_Syst__1F060F0FFD51D672");

            entity.HasIndex(e => new { e.zrp_Typ, e.zrp_ZestawId, e.zrp_ObiektId }, "IDX_ZP").IsUnique();

            entity.Property(e => e.zrp_Wartosc).HasColumnType("decimal(10, 2)");
            entity.Property(e => e.zrp_Wartosc2).HasColumnType("decimal(10, 2)");
        });

        modelBuilder.Entity<dok__Dokument>(entity =>
        {
            entity.HasKey(e => e.dok_Id);

            entity.ToTable(tb =>
                {
                    tb.HasTrigger("aaZkSchedule_Updating");
                    tb.HasTrigger("tr_DokDokument_CheckUniqueIdPrzetwarzaniaKSeF");
                    tb.HasTrigger("tr_DokDokument_CheckUniqueNumerKSeF");
                    tb.HasTrigger("tr_DokDokument_CheckUniqueWegielNumerOswiadczenia");
                    tb.HasTrigger("tr_DokDokument_Deleting");
                    tb.HasTrigger("tr_DokDokument_Inserting");
                    tb.HasTrigger("tr_ZapisCzasu");
                    tb.HasTrigger("trg_DokumentAktualizacja");
                });

            entity.HasIndex(e => new { e.dok_DoDokId, e.dok_Typ, e.dok_Podtyp }, "IX_dok__Dokument");

            entity.HasIndex(e => e.dok_DataWyst, "IX_dok__Dokument_1");

            entity.HasIndex(e => new { e.dok_Typ, e.dok_MagId, e.dok_Nr, e.dok_NrRoz, e.dok_DataWyst }, "IX_dok__Dokument_2");

            entity.HasIndex(e => e.dok_DataOtrzym, "IX_dok__Dokument_3");

            entity.HasIndex(e => new { e.dok_Typ, e.dok_Podtyp, e.dok_NrPelnyOryg, e.dok_PlatnikId }, "IX_dok__Dokument_4");

            entity.HasIndex(e => new { e.dok_Id, e.dok_NrPelny, e.dok_DoDokNrPelny, e.dok_OdbiorcaAdreshId }, "IX_dok__Dokument_5");

            entity.HasIndex(e => new { e.dok_Status, e.dok_Id }, "IX_dok__Dokument_6");

            entity.HasIndex(e => new { e.dok_Typ, e.dok_Id }, "IX_dok__Dokument_7");

            entity.HasIndex(e => new { e.dok_PlatnikId, e.dok_Id, e.dok_OdbiorcaId }, "IX_dok__Dokument_8");

            entity.Property(e => e.dok_Id).ValueGeneratedNever();
            entity.Property(e => e.dok_BladKSeF).IsUnicode(false);
            entity.Property(e => e.dok_CenyDataKursu).HasColumnType("datetime");
            entity.Property(e => e.dok_CenyKurs).HasColumnType("money");
            entity.Property(e => e.dok_CenyLiczbaJednostek).HasDefaultValue(1);
            entity.Property(e => e.dok_CenyNarzut).HasColumnType("money");
            entity.Property(e => e.dok_CzasPrzewozuTransportu)
                .IsRequired()
                .HasMaxLength(3)
                .IsUnicode(false)
                .HasDefaultValue("");
            entity.Property(e => e.dok_CzasWysylkiTransportu)
                .IsRequired()
                .HasMaxLength(8)
                .IsUnicode(false)
                .HasDefaultValue("");
            entity.Property(e => e.dok_DataMag).HasColumnType("datetime");
            entity.Property(e => e.dok_DataNumeruKSeF).HasColumnType("datetime");
            entity.Property(e => e.dok_DataNumeruKSeFOryg)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.dok_DataOtrzym).HasColumnType("datetime");
            entity.Property(e => e.dok_DataRozpoczeciaPrzetwarzaniaKSeF).HasColumnType("datetime");
            entity.Property(e => e.dok_DataUjeciaKorekty).HasColumnType("datetime");
            entity.Property(e => e.dok_DataWyst).HasColumnType("datetime");
            entity.Property(e => e.dok_DataWystawieniaKSeF).HasColumnType("datetime");
            entity.Property(e => e.dok_DataZakonczenia).HasColumnType("datetime");
            entity.Property(e => e.dok_DoDokDataWyst).HasColumnType("datetime");
            entity.Property(e => e.dok_DoDokNrPelny)
                .IsRequired()
                .HasMaxLength(30)
                .IsUnicode(false)
                .HasDefaultValue("");
            entity.Property(e => e.dok_DoNumerKSeF)
                .HasMaxLength(64)
                .IsUnicode(false);
            entity.Property(e => e.dok_DodatkoweInfoRodzajuTransportu)
                .IsRequired()
                .HasMaxLength(350)
                .IsUnicode(false)
                .HasDefaultValue("");
            entity.Property(e => e.dok_DstNrPelny)
                .HasMaxLength(30)
                .IsUnicode(false);
            entity.Property(e => e.dok_DstNrRoz)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.dok_FiskalizacjaData).HasColumnType("datetime");
            entity.Property(e => e.dok_FiskalizacjaIdUrzadzenia).HasMaxLength(40);
            entity.Property(e => e.dok_FiskalizacjaNumer).HasMaxLength(60);
            entity.Property(e => e.dok_IdPrzetwarzaniaKSeF)
                .HasMaxLength(64)
                .IsUnicode(false);
            entity.Property(e => e.dok_IdSesjiKasowej).HasDefaultValueSql("(NULL)");
            entity.Property(e => e.dok_InformacjeDodatkowe)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.dok_JestZmianaDatyDokKas).HasDefaultValue(true);
            entity.Property(e => e.dok_KwDoZaplaty).HasColumnType("money");
            entity.Property(e => e.dok_KwGotowka).HasColumnType("money");
            entity.Property(e => e.dok_KwGotowkaPrzedplata).HasColumnType("money");
            entity.Property(e => e.dok_KwKarta).HasColumnType("money");
            entity.Property(e => e.dok_KwKartaPrzedplata).HasColumnType("money");
            entity.Property(e => e.dok_KwKredyt).HasColumnType("money");
            entity.Property(e => e.dok_KwPrzelew).HasColumnType("money");
            entity.Property(e => e.dok_KwPrzelewPrzedplata).HasColumnType("money");
            entity.Property(e => e.dok_KwReszta).HasColumnType("money");
            entity.Property(e => e.dok_KwWartosc)
                .HasDefaultValue(0m)
                .HasColumnType("money");
            entity.Property(e => e.dok_MscWyst)
                .IsRequired()
                .HasMaxLength(40)
                .IsUnicode(false)
                .HasDefaultValue("");
            entity.Property(e => e.dok_NrIdentNabywcy)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.dok_NrPelny)
                .IsRequired()
                .HasMaxLength(30)
                .IsUnicode(false)
                .HasDefaultValue("");
            entity.Property(e => e.dok_NrPelnyOryg)
                .IsRequired()
                .HasMaxLength(30)
                .IsUnicode(false)
                .HasDefaultValue("");
            entity.Property(e => e.dok_NrRoz)
                .HasMaxLength(3)
                .IsUnicode(false)
                .HasDefaultValue("")
                .IsFixedLength();
            entity.Property(e => e.dok_NumerKSeF)
                .HasMaxLength(64)
                .IsUnicode(false);
            entity.Property(e => e.dok_Odebral)
                .IsRequired()
                .HasMaxLength(40)
                .IsUnicode(false)
                .HasDefaultValue("");
            entity.Property(e => e.dok_PlatTermin).HasColumnType("datetime");
            entity.Property(e => e.dok_PodlegaOplSpec).HasDefaultValue(true);
            entity.Property(e => e.dok_Podtytul)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasDefaultValue("");
            entity.Property(e => e.dok_RabatProc).HasColumnType("money");
            entity.Property(e => e.dok_RolaOdbiorcyKSeF).HasDefaultValue(-1);
            entity.Property(e => e.dok_SelloData).HasColumnType("datetime");
            entity.Property(e => e.dok_SelloSymbol)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.dok_SesjaKSeF)
                .HasMaxLength(64)
                .IsUnicode(false);
            entity.Property(e => e.dok_StatusEx).HasDefaultValue(0);
            entity.Property(e => e.dok_TermPlatTerminalId).HasMaxLength(40);
            entity.Property(e => e.dok_TermPlatTransId).HasMaxLength(128);
            entity.Property(e => e.dok_TerminRealizacji).HasColumnType("datetime");
            entity.Property(e => e.dok_TerminWysylkiDoKSeF).HasColumnType("datetime");
            entity.Property(e => e.dok_TransakcjaData).HasColumnType("datetime");
            entity.Property(e => e.dok_TransakcjaSymbol)
                .HasMaxLength(30)
                .IsUnicode(false);
            entity.Property(e => e.dok_Tytul)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasDefaultValue("");
            entity.Property(e => e.dok_Uwagi)
                .IsRequired()
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasDefaultValue("");
            entity.Property(e => e.dok_UwagiExt)
                .IsRequired()
                .HasMaxLength(3500)
                .IsUnicode(false)
                .HasDefaultValue("");
            entity.Property(e => e.dok_VenderoData).HasColumnType("datetime");
            entity.Property(e => e.dok_VenderoSymbol)
                .HasMaxLength(30)
                .IsUnicode(false);
            entity.Property(e => e.dok_Waluta)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.dok_WalutaDataKursu).HasColumnType("datetime");
            entity.Property(e => e.dok_WalutaKurs)
                .HasDefaultValue(1m)
                .HasColumnType("money");
            entity.Property(e => e.dok_WalutaLiczbaJednostek).HasDefaultValue(1);
            entity.Property(e => e.dok_WartBrutto).HasColumnType("money");
            entity.Property(e => e.dok_WartMag).HasColumnType("money");
            entity.Property(e => e.dok_WartMagP).HasColumnType("money");
            entity.Property(e => e.dok_WartMagR).HasColumnType("money");
            entity.Property(e => e.dok_WartNetto).HasColumnType("money");
            entity.Property(e => e.dok_WartOpWyd).HasColumnType("money");
            entity.Property(e => e.dok_WartOpZwr).HasColumnType("money");
            entity.Property(e => e.dok_WartOplRecykl).HasColumnType("money");
            entity.Property(e => e.dok_WartTwBrutto).HasColumnType("money");
            entity.Property(e => e.dok_WartTwNetto).HasColumnType("money");
            entity.Property(e => e.dok_WartUsBrutto).HasColumnType("money");
            entity.Property(e => e.dok_WartUsNetto).HasColumnType("money");
            entity.Property(e => e.dok_WartVat).HasColumnType("money");
            entity.Property(e => e.dok_WegielNumerOswiadczenia)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.dok_Wystawil)
                .IsRequired()
                .HasMaxLength(40)
                .IsUnicode(false)
                .HasDefaultValue("");
            entity.Property(e => e.dok_XmlHashKSeF)
                .HasMaxLength(64)
                .IsUnicode(false);

            entity.HasOne(d => d.dok_IdPanstwaKonsumentaNavigation).WithMany(p => p.dok__Dokumentdok_IdPanstwaKonsumentaNavigation)
                .HasForeignKey(d => d.dok_IdPanstwaKonsumenta)
                .HasConstraintName("FK_dok__Dokument_sl_Panstwo1");

            entity.HasOne(d => d.dok_IdPanstwaRozpoczeciaWysylkiNavigation).WithMany(p => p.dok__Dokumentdok_IdPanstwaRozpoczeciaWysylkiNavigation)
                .HasForeignKey(d => d.dok_IdPanstwaRozpoczeciaWysylki)
                .HasConstraintName("FK_dok__Dokument_sl_Panstwo");
        });

        modelBuilder.Entity<sl_Magazyn>(entity =>
        {
            entity.HasKey(e => e.mag_Id);

            entity.ToTable(tb =>
                {
                    tb.HasTrigger("tr_MagazynInsMod");
                    tb.HasTrigger("tr_slMagazynInserting");
                    tb.HasTrigger("tr_sl_Magazyn_Deleting");
                });

            entity.Property(e => e.mag_Id).ValueGeneratedNever();
            entity.Property(e => e.mag_Analityka)
                .HasMaxLength(5)
                .IsUnicode(false);
            entity.Property(e => e.mag_Nazwa)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasDefaultValue("");
            entity.Property(e => e.mag_Opis)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.mag_POSAdres)
                .HasMaxLength(82)
                .IsUnicode(false)
                .HasDefaultValue("");
            entity.Property(e => e.mag_POSNazwa)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.mag_Status).HasDefaultValue(1);
            entity.Property(e => e.mag_Symbol)
                .IsRequired()
                .HasMaxLength(3)
                .IsUnicode(false);
        });

        modelBuilder.Entity<sl_Panstwo>(entity =>
        {
            entity.HasKey(e => e.pa_Id);

            entity.Property(e => e.pa_Id).ValueGeneratedNever();
            entity.Property(e => e.pa_KodPanstwaISO)
                .HasMaxLength(2)
                .IsUnicode(false);
            entity.Property(e => e.pa_KodPanstwaUE)
                .IsRequired()
                .HasMaxLength(2)
                .IsUnicode(false)
                .HasDefaultValue("");
            entity.Property(e => e.pa_Nazwa)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasDefaultValue("");
        });

        modelBuilder.Entity<vwPolaWlasne_Dokument>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("vwPolaWlasne_Dokument");

            entity.Property(e => e.dok_CenyDataKursu).HasColumnType("datetime");
            entity.Property(e => e.dok_CenyKurs).HasColumnType("money");
            entity.Property(e => e.dok_CenyNarzut).HasColumnType("money");
            entity.Property(e => e.dok_DataMag).HasColumnType("datetime");
            entity.Property(e => e.dok_DataOtrzym).HasColumnType("datetime");
            entity.Property(e => e.dok_DataWyst).HasColumnType("datetime");
            entity.Property(e => e.dok_DataZakonczenia).HasColumnType("datetime");
            entity.Property(e => e.dok_DoDokDataWyst).HasColumnType("datetime");
            entity.Property(e => e.dok_DoDokNrPelny)
                .IsRequired()
                .HasMaxLength(30)
                .IsUnicode(false);
            entity.Property(e => e.dok_DstNrPelny)
                .HasMaxLength(30)
                .IsUnicode(false);
            entity.Property(e => e.dok_DstNrRoz)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.dok_KwDoZaplaty).HasColumnType("money");
            entity.Property(e => e.dok_KwGotowka).HasColumnType("money");
            entity.Property(e => e.dok_KwGotowkaPrzedplata).HasColumnType("money");
            entity.Property(e => e.dok_KwKarta).HasColumnType("money");
            entity.Property(e => e.dok_KwKredyt).HasColumnType("money");
            entity.Property(e => e.dok_KwPrzelew).HasColumnType("money");
            entity.Property(e => e.dok_KwPrzelewPrzedplata).HasColumnType("money");
            entity.Property(e => e.dok_KwReszta).HasColumnType("money");
            entity.Property(e => e.dok_KwWartosc).HasColumnType("money");
            entity.Property(e => e.dok_MscWyst)
                .IsRequired()
                .HasMaxLength(40)
                .IsUnicode(false);
            entity.Property(e => e.dok_NrIdentNabywcy)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.dok_NrPelny)
                .IsRequired()
                .HasMaxLength(30)
                .IsUnicode(false);
            entity.Property(e => e.dok_NrPelnyOryg)
                .IsRequired()
                .HasMaxLength(30)
                .IsUnicode(false);
            entity.Property(e => e.dok_NrRoz)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.dok_Odebral)
                .IsRequired()
                .HasMaxLength(40)
                .IsUnicode(false);
            entity.Property(e => e.dok_PlatTermin).HasColumnType("datetime");
            entity.Property(e => e.dok_Podtytul)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.dok_RabatProc).HasColumnType("money");
            entity.Property(e => e.dok_SelloData).HasColumnType("datetime");
            entity.Property(e => e.dok_SelloSymbol)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.dok_TermPlatTransId).HasMaxLength(128);
            entity.Property(e => e.dok_TerminRealizacji).HasColumnType("datetime");
            entity.Property(e => e.dok_TransakcjaData).HasColumnType("datetime");
            entity.Property(e => e.dok_TransakcjaSymbol)
                .HasMaxLength(30)
                .IsUnicode(false);
            entity.Property(e => e.dok_Tytul)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.dok_Uwagi)
                .IsRequired()
                .HasMaxLength(500)
                .IsUnicode(false);
            entity.Property(e => e.dok_UwagiExt)
                .IsRequired()
                .HasMaxLength(3500)
                .IsUnicode(false);
            entity.Property(e => e.dok_VenderoData).HasColumnType("datetime");
            entity.Property(e => e.dok_VenderoSymbol)
                .HasMaxLength(30)
                .IsUnicode(false);
            entity.Property(e => e.dok_Waluta)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.dok_WalutaDataKursu).HasColumnType("datetime");
            entity.Property(e => e.dok_WalutaKurs).HasColumnType("money");
            entity.Property(e => e.dok_WartBrutto).HasColumnType("money");
            entity.Property(e => e.dok_WartMag).HasColumnType("money");
            entity.Property(e => e.dok_WartMagP).HasColumnType("money");
            entity.Property(e => e.dok_WartMagR).HasColumnType("money");
            entity.Property(e => e.dok_WartNetto).HasColumnType("money");
            entity.Property(e => e.dok_WartOpWyd).HasColumnType("money");
            entity.Property(e => e.dok_WartOpZwr).HasColumnType("money");
            entity.Property(e => e.dok_WartOplRecykl).HasColumnType("money");
            entity.Property(e => e.dok_WartTwBrutto).HasColumnType("money");
            entity.Property(e => e.dok_WartTwNetto).HasColumnType("money");
            entity.Property(e => e.dok_WartUsBrutto).HasColumnType("money");
            entity.Property(e => e.dok_WartUsNetto).HasColumnType("money");
            entity.Property(e => e.dok_WartVat).HasColumnType("money");
            entity.Property(e => e.dok_Wystawil)
                .IsRequired()
                .HasMaxLength(40)
                .IsUnicode(false);
            entity.Property(e => e.pwd_Data01).HasColumnType("datetime");
            entity.Property(e => e.pwd_Data02).HasColumnType("datetime");
            entity.Property(e => e.pwd_Data03).HasColumnType("datetime");
            entity.Property(e => e.pwd_Data04).HasColumnType("datetime");
            entity.Property(e => e.pwd_Data05).HasColumnType("datetime");
            entity.Property(e => e.pwd_Data06).HasColumnType("datetime");
            entity.Property(e => e.pwd_Data07).HasColumnType("datetime");
            entity.Property(e => e.pwd_Data08).HasColumnType("datetime");
            entity.Property(e => e.pwd_Data09).HasColumnType("datetime");
            entity.Property(e => e.pwd_Data10).HasColumnType("datetime");
            entity.Property(e => e.pwd_Kwota01).HasColumnType("money");
            entity.Property(e => e.pwd_Kwota02).HasColumnType("money");
            entity.Property(e => e.pwd_Kwota03).HasColumnType("money");
            entity.Property(e => e.pwd_Kwota04).HasColumnType("money");
            entity.Property(e => e.pwd_Kwota05).HasColumnType("money");
            entity.Property(e => e.pwd_Kwota06).HasColumnType("money");
            entity.Property(e => e.pwd_Kwota07).HasColumnType("money");
            entity.Property(e => e.pwd_Kwota08).HasColumnType("money");
            entity.Property(e => e.pwd_Kwota09).HasColumnType("money");
            entity.Property(e => e.pwd_Kwota10).HasColumnType("money");
            entity.Property(e => e.pwd_Tekst01)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.pwd_Tekst02)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.pwd_Tekst03)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.pwd_Tekst04)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.pwd_Tekst05)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.pwd_Tekst06)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.pwd_Tekst07)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.pwd_Tekst08)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.pwd_Tekst09)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.pwd_Tekst10)
                .HasMaxLength(255)
                .IsUnicode(false);
        });

        modelBuilder.Entity<vwPolaWlasne_Kontrahent>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("vwPolaWlasne_Kontrahent");

            entity.Property(e => e.kh_DataDodania).HasColumnType("datetime");
            entity.Property(e => e.kh_DataOkolicznosciowa).HasColumnType("datetime");
            entity.Property(e => e.kh_DataVAT).HasColumnType("datetime");
            entity.Property(e => e.kh_DataWaznosciVAT).HasColumnType("datetime");
            entity.Property(e => e.kh_DataWyd).HasColumnType("datetime");
            entity.Property(e => e.kh_DataZmiany).HasColumnType("datetime");
            entity.Property(e => e.kh_Domena)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.kh_DomyslnaWaluta)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.kh_EFakturyData).HasColumnType("datetime");
            entity.Property(e => e.kh_EMail)
                .IsRequired()
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.kh_GaduGadu)
                .IsRequired()
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.kh_Grafika).HasColumnType("image");
            entity.Property(e => e.kh_Imie)
                .IsRequired()
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.kh_KRS)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.kh_Komunikat)
                .IsRequired()
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.kh_KomunikatOd).HasColumnType("datetime");
            entity.Property(e => e.kh_Kontakt)
                .IsRequired()
                .HasMaxLength(60)
                .IsUnicode(false);
            entity.Property(e => e.kh_Lokalizacja).HasMaxLength(256);
            entity.Property(e => e.kh_MaxWartDokKred).HasColumnType("money");
            entity.Property(e => e.kh_MaxWartKred).HasColumnType("money");
            entity.Property(e => e.kh_Nazwisko)
                .IsRequired()
                .HasMaxLength(51)
                .IsUnicode(false);
            entity.Property(e => e.kh_NrAnalitykaD)
                .IsRequired()
                .HasMaxLength(5)
                .IsUnicode(false);
            entity.Property(e => e.kh_NrAnalitykaO)
                .IsRequired()
                .HasMaxLength(5)
                .IsUnicode(false);
            entity.Property(e => e.kh_NrDowodu)
                .IsRequired()
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.kh_OpisOperacji)
                .IsRequired()
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.kh_OrganWyd)
                .IsRequired()
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.kh_PESEL)
                .IsRequired()
                .HasMaxLength(11)
                .IsUnicode(false);
            entity.Property(e => e.kh_Pole1)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.kh_Pole2)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.kh_Pole3)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.kh_Pole4)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.kh_Pole5)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.kh_Pole6)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.kh_Pole7)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.kh_Pole8)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.kh_Powitanie)
                .IsRequired()
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.kh_Pracownik)
                .IsRequired()
                .HasMaxLength(60)
                .IsUnicode(false);
            entity.Property(e => e.kh_PrefKontakt)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.kh_ProcGotowka).HasColumnType("money");
            entity.Property(e => e.kh_ProcKarta).HasColumnType("money");
            entity.Property(e => e.kh_ProcKredyt).HasColumnType("money");
            entity.Property(e => e.kh_ProcPozostalo).HasColumnType("money");
            entity.Property(e => e.kh_ProcPrzelew).HasColumnType("money");
            entity.Property(e => e.kh_REGON)
                .IsRequired()
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.kh_Skype)
                .IsRequired()
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.kh_Symbol)
                .IsRequired()
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.kh_Uwagi)
                .IsRequired()
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.kh_WWW)
                .IsRequired()
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.pwd_Data01).HasColumnType("datetime");
            entity.Property(e => e.pwd_Data02).HasColumnType("datetime");
            entity.Property(e => e.pwd_Data03).HasColumnType("datetime");
            entity.Property(e => e.pwd_Data04).HasColumnType("datetime");
            entity.Property(e => e.pwd_Data05).HasColumnType("datetime");
            entity.Property(e => e.pwd_Data06).HasColumnType("datetime");
            entity.Property(e => e.pwd_Data07).HasColumnType("datetime");
            entity.Property(e => e.pwd_Data08).HasColumnType("datetime");
            entity.Property(e => e.pwd_Data09).HasColumnType("datetime");
            entity.Property(e => e.pwd_Data10).HasColumnType("datetime");
            entity.Property(e => e.pwd_Kwota01).HasColumnType("money");
            entity.Property(e => e.pwd_Kwota02).HasColumnType("money");
            entity.Property(e => e.pwd_Kwota03).HasColumnType("money");
            entity.Property(e => e.pwd_Kwota04).HasColumnType("money");
            entity.Property(e => e.pwd_Kwota05).HasColumnType("money");
            entity.Property(e => e.pwd_Kwota06).HasColumnType("money");
            entity.Property(e => e.pwd_Kwota07).HasColumnType("money");
            entity.Property(e => e.pwd_Kwota08).HasColumnType("money");
            entity.Property(e => e.pwd_Kwota09).HasColumnType("money");
            entity.Property(e => e.pwd_Kwota10).HasColumnType("money");
            entity.Property(e => e.pwd_Tekst01)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.pwd_Tekst02)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.pwd_Tekst03)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.pwd_Tekst04)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.pwd_Tekst05)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.pwd_Tekst06)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.pwd_Tekst07)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.pwd_Tekst08)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.pwd_Tekst09)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.pwd_Tekst10)
                .HasMaxLength(255)
                .IsUnicode(false);
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}